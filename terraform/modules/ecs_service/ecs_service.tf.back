  # container_definitions = templatefile(
  #   "./templates/nanomdm_template.json",
  #   {
  #     "prefix_app_name"      = local.prefix_app_name
  #     "awslogs_group"        = aws_cloudwatch_log_group.main.name
  #     "aws_region"           = data.aws_region.current.name
  #     "scep_container_image" = var.scep_container_image
  #     "scep_app_port"        = var.scep_app_port
  #     "scep_task_container_memory" = tostring(var.scep_task_definition_memory)
  #     "scep_task_container_cpu"    = tostring(var.scep_task_definition_cpu)
  #     "nanomdm_container_image"    = var.nanomdm_container_image
  #     "nanomdm_app_port"           = var.nanomdm_app_port
  #     "nanomdm_task_container_memory" = var.nanomdm_task_definition_memory
  #     "nanomdm_task_container_cpu"    = var.nanomdm_task_definition_cpu
      # "environment"                   = var.task_container_environment
      # "nanomdm_task_environment"      = var.task_container_environment
    }
    # {
    #   "CONTAINER_IMAGE"       = "${aws_ecr_repository.ecr.repository_url}:latest",
    #   "LOG_GROUP"             = aws_cloudwatch_log_group.app.name,
    #   "SONARQUBE_DB_PASSWORD" = data.aws_ssm_parameter.SONARQUBE_DB_PASSWORD.name,
    #   "SONARQUBE_DB_DSN"      = "jdbc:postgresql://${data.aws_db_instance.postgres.address}:${data.aws_db_instance.postgres.port}/${data.aws_db_instance.postgres.db_name}"
    # }
  #)

  # container_definitions    = jsonencode(
  #     templatefile("./templates/nanomdm_template.tftpl",{
  #     prefix_app_name = local.prefix_app_name,
  #     awslogs_group       = aws_cloudwatch_log_group.main.name,
  #     aws_region          = data.aws_region.current.name,
  #     scep_container_image = var.scep_container_image,
  #     scep_app_port       = var.scep_app_port,
  #     # scep_task_mount_points       = var.scep_task_mount_points,
  #     scep_task_container_memory = var.scep_task_definition_memory,
  #     scep_task_container_cpu = var.scep_task_definition_cpu,
  #     nanomdm_container_image = var.nanomdm_container_image,
  #     nanomdm_app_port       = var.nanomdm_app_port,
  #     # nanomdm_task_mount_points       = var.nanomdm_task_mount_points,
  #     nanomdm_task_container_memory = var.nanomdm_task_definition_memory,
  #     nanomdm_task_container_cpu = var.nanomdm_task_definition_cpu,
  #     environment         = local.task_environment['']}))
  # templatefile("./templates/scep_template.tftpl", {
  #   prefix_app_name = local.prefix_app_name,
  #   awslogs_group       = aws_cloudwatch_log_group.main.name,
  #   aws_region          = data.aws_region.current.name,
  #   scep_container_image = var.scep_container_image,
  #   scep_app_port       = var.scep_app_port,
  #   # scep_task_mount_points       = var.scep_task_mount_points,
  #   scep_task_container_memory = var.scep_task_definition_memory,
  #   scep_task_container_cpu = var.scep_task_definition_cpu,
  #   nanomdm_container_image = var.nanomdm_container_image,
  #   nanomdm_app_port       = var.nanomdm_app_port,
  #   # nanomdm_task_mount_points       = var.nanomdm_task_mount_points,
  #   nanomdm_task_container_memory = var.nanomdm_task_definition_memory,
  #   nanomdm_task_container_cpu = var.nanomdm_task_definition_cpu,
  #   environment         = merge(local.nanomdm_task_environment, local.task_environment)}))

  # templatefile("./templates/nanomdm_template.tftpl", 
  # { prefix_app_name = local.prefix_app_name,
  #   awslogs_group       = aws_cloudwatch_log_group.main.name,
  #   aws_region          = data.aws_region.current.name,
  #   scep_container_image = var.scep_container_image,
  #   scep_app_port       = var.scep_app_port,
  #   # scep_task_mount_points       = var.scep_task_mount_points,
  #   scep_task_container_memory = var.scep_task_definition_memory,
  #   scep_task_container_cpu = var.scep_task_definition_cpu,
  #   nanomdm_container_image = var.nanomdm_container_image,
  #   nanomdm_app_port       = var.nanomdm_app_port,
  #   # nanomdm_task_mount_points       = var.nanomdm_task_mount_points,
  #   nanomdm_task_container_memory = var.nanomdm_task_definition_memory,
  #   nanomdm_task_container_cpu = var.nanomdm_task_definition_cpu,
  #   nanomdm_task_environment         = local.nanomdm_task_environment}
  # )
  # data.template_file.nanomdm_container_definitions.rendered